#!/bin/bash

ferr(){ echo "$@"; exit 1; }
export NVM_DIR=${NVM_DIR:-"/usr/local/nvm"}
. $NVM_DIR/nvm.sh || ferr "could not source nvm"
nvm use default || ferr "could not use nvm"

[[ -v ARANGO_SUPPORTED_BRANCHES ]] || ferr "supported branches not set"
[[ -v ARANGO_CACHE_BASE ]] || ferr "arango cache base not set";

cache_base="$ARANGO_CACHE_BASE"
mkdir -p "$cache_base" && cd "$cache_base" || ferr "failed to create cache dir"

for i in $ARANGO_SUPPORTED_BRANCHES; do
    cache="$cache_base/$i"
    mkdir -p "$cache"
    cd "$cache"

    for book in AQL HTTP Manual Cookbook Drivers; do
        echo
        echo "=============================================================="
        echo "Installing modules for book: $book in version $i"
        cd "$cache"
        mkdir "$book" && cd "$book"
        rm -fr book.json
        url="https://raw.githubusercontent.com/arangodb/arangodb/"
        url+="$i/Documentation/Books/${book}/book.json"
        echo " - run curl on '$url'"
        if ! curl -s -S --fail -O "$url" >/dev/null; then
            echo "could not download $url continue"
            rm -fr "$cache/$book"
            continue
        fi

        cat book.json | sed -e 's/@GPRIORITY@/0/' | jq .plugins > book.json.plugins || ferr "failed to extract plugins"
        unset found
        while read -r file; do
            dir="${file%/*}"
            if cmp --silent book.json.plugins "$file"; then
                found="$dir"
                echo " - found match in $dir"
                break
            fi
        done < <(find "$ARANGO_CACHE_BASE" -not -path "$cache/$book/*" -iname "book.json.plugins" )

        if [[ -v found ]]; then
            echo " - linking $found to $(pwd)"
            cd $cache
            rm -fr "$cache/$book"
            ln -s "$found" "$cache/$book"
            continue
        fi

        cp book.json book.json.original

        echo "replacing templates"
        ## replace templates with some random strings so we
        ## are able to install
        sed -e "s;@GCHANGE_FREQ@;daily;" \
            -e "s;@GPRIORITY@;0.3;" \
            -i "book.json" || ferr "failed to replace templates"

        echo "run: gitbook install -g in $(pwd)"
        echo "plugins: << HERE"
        cat book.json.plugins
        echo "HERE"

        gitbook install -g &> book_install.log || { echo "Failed to install modules"; cat book.json; exit 1; }

        mv book.json book.json.install
    done
done 2>&1 | tee setup_gitbook.log

chmod -R 777 "$ARANGO_CACHE_BASE"
tree -L 2 "$ARANGO_CACHE_BASE"
sleep 3

echo "git book modules successfully installed"
