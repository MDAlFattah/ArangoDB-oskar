#!/bin/bash
script_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
ferr(){ echo "$@"; exit 1; }

export NVM_DIR="${NVM_DIR:-/usr/local/nvm}"
. $NVM_DIR/nvm.sh || ferr "could not source nvm"
nvm use default || ferr "could not activate nvm"

set -u
set -o pipefail

skip_examples=false
skip_swagger=false
for arg in "$@"; do
    case "$arg" in
        --skip-examples)
            skip_examples=true
        ;;
        --skip-swagger)
            skip_swagger=true
        ;;
        *)
        ;;
    esac
done

type gitbook &>/dev/null || { echo "gitbook not installed"; exit; }
type ditaa &>/dev/null || { echo "dittaa not installed"; exit; }

# oskar work dir - or a directory that contains a checkout in a sub folder
export ARANGO_OSKAR=${ARANGO_OSKAR:-"/oskar"}
export ARANGO_WORK=${ARANGO_WORK:-"$ARANGO_OSKAR/work"}

# path to arangodb source
export ARANGO_SOURCE="$ARANGO_WORK/ArangoDB"
export ARANGO_SOURCE_DOC="$ARANGO_SOURCE/Documentation"
export ARANGO_SOURCE_DOC_BOOKS="$ARANGO_SOURCE_DOC/Books"

# path to documentation build
export ARANGO_BUILD_DOC="$ARANGO_WORK/build-documentation"
export ARANGO_BUILD_DOC_PRE="$ARANGO_BUILD_DOC/books_pp"
export ARANGO_BUILD_DOC_OUT="$ARANGO_BUILD_DOC/books_html"

cd "$ARANGO_SOURCE" || { echo "could not change in arangodb source directroy"; exit 1; }

#TODO check .git/config instead
[[ -f VERSION ]]  ||  { echo "please make sure you are in a valid checkout"; exit 1; }
[[ -f VERSIONS ]] ||  { echo "please make sure you are in a valid checkout"; exit 1; }

rm -fr $ARANGO_BUILD_DOC.log

if $skip_examples; then
    echo "skip generate examples"
else
    [[ -e ./build/bin/arangod ]] || { echo "no arangod exexutable available"; exit 1; }

    {
        echo "run generate examples"
        ./utils/generateExamples.sh || { echo "failed to generate examples!"; exit 1; }
    } 2>&1 | tee -a $ARANGO_BUILD_DOC.log
fi

if $skip_swagger; then
  echo "skip generate swagger"
else
    {
        echo "generate swagger"
        #TODO ./utils/generateSwagger.sh - must be deleted
        cmd=( 'python'
              "$PWD/utils/generateSwagger.py"
              "$PWD"
              "$PWD/js/apps/system/_admin/aardvark/APP/api-docs"
              'api-docs'
              "$PWD/Documentation/DocuBlocks/Rest"
            )
        echo "run ${cmd[@]}"
        "${cmd[@]}" > $PWD/js/apps/system/_admin/aardvark/APP/api-docs.json \
          || { echo "failed to generate swagger"; exit 1; }

        ls -lisah js/apps/system/_admin/aardvark/APP/api-docs.json
    } 2>&1 | tee -a $ARANGO_BUILD_DOC.log

    #./utils/generateSwagger.sh || { echo "failed to generate swagger"; exit 1; }
fi

echo "calling build_documenation"
"$ARANGO_OSKAR/containers/documentation.docker/build_documentation" "$@" 2>&1 | tee -a $ARANGO_BUILD_DOC.log
